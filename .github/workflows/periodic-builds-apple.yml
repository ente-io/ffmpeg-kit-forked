name: apple nightly builds

on:
  workflow_dispatch:
  push:
    tags: 
      - '*'

jobs:
  build-ios-main-on-macos:
    name: ios main
    runs-on: macos-13
    strategy:
      matrix:
        xcode: [ '15.2' ]
        branches: [ 'development' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branches }}
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git doxygen nasm cmake gcc gperf texinfo yasm bison autogen wget gettext meson ninja ragel groff gtk-doc libtasn1 --overwrite
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: PATH="/usr/local/opt/bison/bin:$PATH" XML_CATALOG_FILES="/usr/local/etc/xml/catalog" ./ios.sh -x --full --enable-gpl --disable-lib-srt --disable-lib-gnutls
      - name: package zip
        working-directory: ./prebuilt/bundle-apple-xcframework-ios/
        run: zip -r ffmpegkit.xcframework.zip *
      - name: Upload Release Asset (.integrity)
        id: upload-release-asset-integrity
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          allowUpdates: true
          artifacts: "prebuilt/bundle-apple-xcframework-ios/ffmpegkit-bundled.xcframework.zip"
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
        
